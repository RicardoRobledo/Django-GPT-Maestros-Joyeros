# Generated by Django 5.0.6 on 2024-08-07 17:52

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

from ..utils.migration_handlers import insert_initial_data


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('documents', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MetricModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metric_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'metric',
                'verbose_name_plural': 'metrics',
            },
        ),
        migrations.CreateModel(
            name='SimulationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('average', models.IntegerField(validators=[django.core.validators.MinValueValidator(
                    1), django.core.validators.MaxValueValidator(10)])),
                ('conversation', models.TextField(null=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING,
                 related_name='user_simulations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'simulation_evaluation',
                'verbose_name_plural': 'simulation_evaluations',
            },
        ),
        migrations.CreateModel(
            name='WorkshopEvaluationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('average', models.IntegerField(validators=[django.core.validators.MinValueValidator(
                    1), django.core.validators.MaxValueValidator(10)])),
                ('topic_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING,
                 related_name='topic_workshop_evaluations', to='documents.topicmodel')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING,
                 related_name='user_workshop_evaluations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'workshop_evaluation',
                'verbose_name_plural': 'workshop_evaluations',
            },
        ),
        migrations.CreateModel(
            name='ScoreModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(
                    1), django.core.validators.MaxValueValidator(10)])),
                ('metric_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING,
                 related_name='metric_scores', to='evaluations.metricmodel')),
                ('simulation_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING,
                 related_name='simulation_scores', to='evaluations.simulationmodel')),
            ],
            options={
                'verbose_name': 'score',
                'verbose_name_plural': 'scores',
                'indexes': [models.Index(fields=['simulation_id'], name='score_sim_id_idx'), models.Index(fields=['metric_id'], name='score_metric_id_idx'), models.Index(fields=['id'], name='score_id_idx')],
            },
        ),
        migrations.RunPython(insert_initial_data),
    ]
